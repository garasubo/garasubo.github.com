---
title: "ICPC2014参戦記"
pubDate: "2014-07-12"
tags: ["procon"]
description: "ICPC2014国内予選に参加した結果を5完24位の参戦記と問題解法"
---

ICPC2014国内予選参加しました。
結果は5完の24位でアジア地区予選には自明に進めないのでここでおしまい。

# 解いた問題と方針
相方にAを任している間に、C,Eの実装を考えて、
Aが終わった後、Cを通す。
疲れたので相方にBを任せている間に、Dの方針を聞いたり他の問題考えていた。
Bが終わった後、DとEを連続して実装して通す。
F、Gは歯がたちませんでした。

## C問題
はじめは二部探索かな、と思ったが、判定関数考えているうちに直接求まることに気がつく。

まず、各々のx軸上の区間のビルの高さの最大値を求める。ビルが存在しなければ0とする。
i<=0となるような[i-1,i]区間ではx=iの地点がより太陽が先に見えてしまう。
i>0となるような[i-1,i]区間ではx=i-1の地点がより太陽が先に見える。
よってそれぞれの区間について、太陽が先に見えるx座標とそこの高さに円が到達する時間を求める。
そのうち最小のものが答えとわかる。

r<=20という制限により、区間中に存在するビルの高さの最大値は愚直に求まり、
到達する時間については2次方程式をさくっと解くだけ。

## D問題
相方から聞いた方針を具体化しただけ。

文字数がたかだか20なので、各文字について変換されたorされないと仮定して復号化、それを暗号化してちゃんと元に戻るかを計算すれば大丈夫、
というもので実装した。
各文字について変換したかどうかをビットマスクで表現して、’z’を復号化するときだけは例外処理。
ちゃんと元に戻った文字列は記録し、最後にソートして出力。

ただ、この方針、すぐには実装できるのだが、最大で2^20\*20\*25の計算となり、500000000くらいとなり、普通のプロコンだと通用しない計算量となってしまった。
（暗号化するかしないかのパターンで2^20通り、暗号化で20\*25の処理が入る）
ただ、ICPCは制限時間が無く、手元で実行し出力ファイルを提出すればいいだけなので、
出力を待っている間、他の問題を実装していれば問題なく正解をもらえた。

もうちょい何とかするとすると、暗号化するところの処理を文字の出現位置とかをメモすることで高速化するか、
DFSとかで暗号化できないような文字列は探索しないようにすることでそもそも判定の手間を減らすとかか。
あと、ビットマスクの探索順を工夫すれば最後のソートはいらない。
まあ、いずれも実装が複雑化しそうなので、これはこれでよかったのかなあ。

## E問題
自明に木構造をしているので、木DP的な何かかなと当たりをつける。
ノード数が300と少ないので、全ての点について根であると仮定した場合で回しても十分間に合いそう。
終点についてもそれぞれについて終点としてみて試せば300\*300\*300で間に合うんじゃないか、となったが、
擬似コード書き始める時点で、終点を固定して探索するの厄介だなあと考え、もうちょっと考えなおしてみる。

そこで、始点と終点が同じであるパターンからまず考える。
始点をAとしておく。
葉、つまりこの先に何もない島につながっている橋はわざわざ渡る必要もなく、即座に撤去すれば良い。
そうではない島(Bとおく)につながっている橋は、まず、Bより先にある橋を撤去する必要があるので、一度その橋をわたらなければならない。
Bについても、Aに戻るためには同じ橋を渡らなければならないので即座には撤去できず、Bよりも先にある橋を全て撤去してBに戻り、
Aに戻り、やっとA-B間の橋を撤去出来る。
つまり、ある島を始点とした場合、それを根にした木と考えた時、葉をつなぐ橋は即座に撤去し、そうでない橋は2回渡った後撤去することで、
全ての橋を撤去できる。始点と終点が同じならこれが最小コストのはずだ。

始点と終点が異なる場合、最後に終点まで行くとき、そのパス上にある橋を渡ることになるが、この時、戻る必要性がないので、渡った時点で即撤去できる。
つまり、始点と終点が異なる場合、始点から終点までのパス長ぶん戻るコストを節約できるという訳である。
よって、始点と終点が異なる場合の最終コストは始点を固定した場合、その始点から最も長い長さの葉ではない島を終点とした時である。

コードとしては、DFSで始点と終点が同じと仮定した場合のコストを計算しつつ、始点からその島までのコストを持つことで最も遠い島を探すようなコードになった。
最も遠い島に関してと始点と終点が同じ時のコストを計算するDFSを分けてもDFS1回の計算量が高々ノード数程度なので、十分に間に合う。

#感想・反省
3度目の参戦となり、今までの反省を活かせたんじゃないかなと思っている。
1度目は個人としての能力があまりにも低すぎた＆相方がガチ勢だったので、足を引っ張るだけのゴミだったのだが、
2度目は自分の能力もそれなりについて、相方もほぼ同レベルだったが、結構足を引っ張ってしまったと反省していた。
原因はちゃんと実装を細かいレベルで考えていなかったことで、
方針は立っても細かいところでつまり1台しか使えないパソコンをかなり占有してしまった。

今回は相方が実装している間に、実装の細かいところをじっくりと考えたので、実装はかなり早く終わったのではないかな、と思っている。
前回の僕であれば、Eで始点・終点それぞれ固定して探索しようで行けると思い込んで実装に詰まっているところだった。
あと、チーム全体和やかな雰囲気だったので、練習量も個人の能力もそこそこだった割にはいい成績を残せたのかなと。

ただ、今回も反省はあって、入出力パターンの確認はしっかりやるべきだった。
これで1回躓いてしまった。ロスは小さかったかもしれないが、やはり、事前に意識すべき範囲であった。

#まとめ
ICPCにおいて最も重要なこと、それはパーフェクト・ハーモニー、完全調和だ！

（強い人に怒られそう）
