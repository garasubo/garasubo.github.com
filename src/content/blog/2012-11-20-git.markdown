---
title: "gitでのbranchでの開発"
pubDate: "2012-11-20"
tags: []
description: "gitのブランチ機能を使った開発ワークフロー、リモートブランチの扱い方について学習したメモ"
---

最近何かとgitを使うことが多くなったので、branchの作り方から
mergeの仕方まできちんと学ばなきゃなと思い立って色々調べた。

##リモートブランチの扱い方  
["gitのリモートブランチを使って作業を行う流れのメモ - 那由多屋 開発日誌"](http://d.hatena.ne.jp/nayutaya/20090519/1242701594)


##merge
ブランチつくったら、あとでマージしなきゃいけない。
実はgitのマージにはいくつか種類があるらしく、これはきちんと把握しておく必要が有りそう。  
["図で分かるgit-mergeの--ff, --no-ff, --squashの違い - アジャイルSEを目指すブログ"](http://d.hatena.ne.jp/sinsoku/20111025/1319497900)  
これを読む限り、基本的には--no--ffでマージコミットをきちんとつくるのが
あとでログ見返すときにも良さそうな気がする。

##うっかりマージミスした時の対処。
commitを取り消すコマンドであるresetは使い方を誤るととんでもないことになるので気をつけなければならない。
このへんが参考になりそう。  
[git で merge をとりけす法 - ToMmY Makes Love with Codes](http://d.hatena.ne.jp/ToMmY/20110719/1311034743)  
[~nabeken/diary/ : git で間違って merge してしまった場合 (fast forward でマージしてしまったのを取り消したい)](http://projects.tsuntsun.net/~nabeken/diary/Sysadmin/git-7.html)  

##rebaseコマンドについて
誰かがrebaseコマンド使えない奴はgit使えるうちに入らないと言っていたので調べた。
コミットに対して直接変更を加えるので危ないことは確かっぽいが、
小さなmergeをしたい時とかはこっちのほうが良いのかもしれない。
少なくとも知っておいて損はないと思うので。  
[図で分かるgit-rebase - アジャイルSEを目指すブログ](http://d.hatena.ne.jp/sinsoku/20110925/1316933393)  


##間違ったブランチを変更してしまった！
gitならこんなことまで出来るんだって感じ。
記事読んで理解するのにちょっと時間かかった。  
[別のトピックブランチにしてしまった複数のコミットを移動する - ToMmY Makes Love with Codes](http://d.hatena.ne.jp/ToMmY/20110914/1316024033)  

