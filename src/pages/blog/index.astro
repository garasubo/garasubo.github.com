---
import { getCollection } from 'astro:content';
import Base from '../../layouts/Base.astro';

const posts = (await getCollection('blog'))
    .filter((post) => import.meta.env.DEV || post.data.draft !== true)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const formatter = new Intl.DateTimeFormat('ja-JP', { dateStyle: 'medium' });
---

<Base title="Blog | @garasubo" description="@garasuboのブログ。Markdownで執筆した記事をまとめています。">
    <section class="mx-auto max-w-3xl py-12">
        <h1 class="text-3xl font-bold tracking-tight text-slate-900 dark:text-slate-100">Blog</h1>
        <p class="mt-3 text-slate-600 dark:text-slate-300">
            Markdownで書いた記事をまとめています。技術記事や登壇の振り返りなどを不定期に更新します。
        </p>

        <div class="mt-12 space-y-8">
            {posts.length === 0 ? (
                <p class="text-slate-600 dark:text-slate-300">
                    まだ公開されている記事はありません。
                </p>
            ) : (
                posts.map((post) => (
                    <article class="group rounded-2xl border border-white/10 bg-white/70 p-6 shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow dark:bg-slate-900/50">
                        <a href={`/blog/${post.slug}/`} class="block space-y-3">
                            <div class="flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-slate-500 dark:text-slate-400">
                                <time datetime={post.data.pubDate.toISOString()}>
                                    {formatter.format(post.data.pubDate)}
                                </time>
                                {post.data.updatedDate && (
                                    <time datetime={post.data.updatedDate.toISOString()} class="text-xs">
                                        更新: {formatter.format(post.data.updatedDate)}
                                    </time>
                                )}
                            </div>
                            <h2 class="text-2xl font-semibold tracking-tight text-slate-900 transition-colors group-hover:text-blue-600 dark:text-slate-100 dark:group-hover:text-blue-400">
                                {post.data.title}
                            </h2>
                            <p class="text-slate-600 dark:text-slate-300">
                                {post.data.description}
                            </p>
                            {post.data.tags?.length ? (
                                <ul class="flex flex-wrap gap-2 pt-1 text-xs font-medium">
                                    {post.data.tags.map((tag) => (
                                        <li class="rounded-full bg-slate-100 px-3 py-1 text-slate-600 dark:bg-slate-800 dark:text-slate-300">
                                            {tag}
                                        </li>
                                    ))}
                                </ul>
                            ) : null}
                        </a>
                    </article>
                ))
            )}
        </div>
    </section>
</Base>
